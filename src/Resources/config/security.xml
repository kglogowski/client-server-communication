<?xml version="1.0" ?>

<container xmlns="http://symfony.com/schema/dic/services"
           xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
           xsi:schemaLocation="http://symfony.com/schema/dic/services http://symfony.com/schema/dic/services/services-1.0.xsd">

    <services>
        <service id="csc.security.encoder.password" class="CSC\Component\Auth\Security\Encoder\PasswordEncoder"/>

        <service id="csc.security.provider.token_user" class="CSC\Component\Auth\Security\Provider\TokenUserProvider" abstract="true">
            <argument type="service" id="csc.entity_manager.provider"/>
        </service>

        <service id="csc.security.provider.user_access_token" class="CSC\Component\Auth\Security\Provider\UserAccessTokenProvider">
            <argument type="service" id="csc.entity_manager.provider"/>
        </service>

        <service id="csc.security.resolver.user_access_token" class="CSC\Component\Auth\Security\Resolver\UserAccessTokenResolver">
            <argument type="service" id="csc.security.generator.jwt_user_token_generator"/>
            <argument>%csc.configuration%</argument>
        </service>

        <service id="csc.security.generator.jwt_user_token_generator" class="CSC\Component\Auth\Security\Generator\JwtUserTokenGenerator">
            <argument>%csc.configuration%</argument>
        </service>

        <service id="csc.security.authenticator.user" class="CSC\Component\Auth\Security\Authenticator\AbstractUserAuthenticator" abstract="true">
            <argument type="service" id="jms_serializer"/>
            <argument type="service" id="csc.security.encoder.password"/>
            <argument type="service" id="csc.security.provider.user_access_token"/>
            <argument type="service" id="csc.security.resolver.user_access_token"/>
            <argument type="service" id="csc.entity_manager.provider"/>
            <argument type="service" id="security.token_storage"/>
            <call method="setLogger">
                <argument type="service" id="monolog.logger.auth"/>
            </call>
        </service>

        <service id="csc.security.authenticator.token" class="CSC\Component\Auth\Security\Authenticator\TokenAuthenticator" parent="csc.security.authenticator.user" abstract="true">
            <call method="setTokenChecker">
                <argument type="service" id="csc.checker.jwt_token" />
            </call>
        </service>
        <service id="csc.security.authenticator.credential" class="CSC\Component\Auth\Security\Authenticator\CredentialAuthenticator" parent="csc.security.authenticator.user" abstract="true"/>

        <service id="csc.decorator.plain_date_time" class="CSC\Util\DateTime\PlainDateTimeDecorator"/>

        <!-- RESOLVER -->
        <service id="csc.security.response.resolver.token" class="CSC\Component\Auth\Response\Resolver\TokenResponseResolver">
            <argument type="service" id="csc.decorator.plain_date_time"/>
        </service>

        <!-- PROCESSOR -->
        <service id="csc.security.response.processor.access_token" class="CSC\Component\Auth\Response\Processor\AccessTokenResponseProcessor">
            <argument type="service" id="csc.security.response.resolver.token"/>
        </service>

        <service id="csc.security.response.processor.active_user" class="CSC\Component\Auth\Response\Processor\ActiveUserResponseProcessor">
            <argument type="service" id="csc.provider.user_provider"/>
            <argument type="service" id="jms_serializer"/>
        </service>

        <service id="csc.security.response.processor.clear_token" class="CSC\Component\Auth\Response\Processor\ClearTokenResponseProcessor">
            <argument type="service" id="security.token_storage"/>
            <argument type="service" id="csc.entity_manager.provider"/>
        </service>

        <service id="csc.voter.abstract" class="CSC\Component\Auth\Security\Voter\AbstractVoter" abstract="true">
            <call method="setEntityManager">
                <argument type="service" id="csc.entity_manager.provider" />
            </call>
        </service>
    </services>
</container>
